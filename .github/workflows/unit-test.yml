name: Access Unit Tests
run-name: ${{github.actor}}

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"
  build:
    needs: job2 
    name: Build library
    runs-on: ubuntu-latest

    outputs:
      runner: ${{runner.name}}
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
            node-version: ${{ matrix.node-version }}
            

      - name: Checkout library
        uses: actions/checkout@v4
        
      - name: Install Yarn
        run: npm install -g yarn
        
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build library
        run: yarn build
      - name: Test Library
        run: yarn test

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: ./report.xml    # Path to test results
          reporter: jest-junit        # Format of test results

      


       